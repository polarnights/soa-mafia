# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import service_pb2 as service__pb2


class MafiaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRoom = channel.unary_unary(
                '/mafia.Mafia/CreateRoom',
                request_serializer=service__pb2.CreateRoomRequest.SerializeToString,
                response_deserializer=service__pb2.CreateRoomReply.FromString,
                )
        self.JoinToRoom = channel.unary_unary(
                '/mafia.Mafia/JoinToRoom',
                request_serializer=service__pb2.JoinToRoomRequest.SerializeToString,
                response_deserializer=service__pb2.JoinToRoomReply.FromString,
                )
        self.SubscribeOnNotifications = channel.unary_stream(
                '/mafia.Mafia/SubscribeOnNotifications',
                request_serializer=service__pb2.SubscribeOnNotificationsRequest.SerializeToString,
                response_deserializer=service__pb2.SubscribeOnNotificationsReply.FromString,
                )
        self.LeaveRoom = channel.unary_unary(
                '/mafia.Mafia/LeaveRoom',
                request_serializer=service__pb2.LeaveRoomRequest.SerializeToString,
                response_deserializer=service__pb2.LeaveRoomReply.FromString,
                )
        self.ReadyToStart = channel.unary_unary(
                '/mafia.Mafia/ReadyToStart',
                request_serializer=service__pb2.ReadyToStartRequest.SerializeToString,
                response_deserializer=service__pb2.ReadyToStartReply.FromString,
                )
        self.Kill = channel.unary_unary(
                '/mafia.Mafia/Kill',
                request_serializer=service__pb2.KillRequest.SerializeToString,
                response_deserializer=service__pb2.KillReply.FromString,
                )
        self.IsKiller = channel.unary_unary(
                '/mafia.Mafia/IsKiller',
                request_serializer=service__pb2.IsKillerRequest.SerializeToString,
                response_deserializer=service__pb2.IsKillerReply.FromString,
                )
        self.Night = channel.unary_unary(
                '/mafia.Mafia/Night',
                request_serializer=service__pb2.NightRequest.SerializeToString,
                response_deserializer=service__pb2.NightReply.FromString,
                )
        self.Day = channel.unary_unary(
                '/mafia.Mafia/Day',
                request_serializer=service__pb2.DayRequest.SerializeToString,
                response_deserializer=service__pb2.DayReply.FromString,
                )


class MafiaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinToRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeOnNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadyToStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Kill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsKiller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Night(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Day(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRoom,
                    request_deserializer=service__pb2.CreateRoomRequest.FromString,
                    response_serializer=service__pb2.CreateRoomReply.SerializeToString,
            ),
            'JoinToRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinToRoom,
                    request_deserializer=service__pb2.JoinToRoomRequest.FromString,
                    response_serializer=service__pb2.JoinToRoomReply.SerializeToString,
            ),
            'SubscribeOnNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeOnNotifications,
                    request_deserializer=service__pb2.SubscribeOnNotificationsRequest.FromString,
                    response_serializer=service__pb2.SubscribeOnNotificationsReply.SerializeToString,
            ),
            'LeaveRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveRoom,
                    request_deserializer=service__pb2.LeaveRoomRequest.FromString,
                    response_serializer=service__pb2.LeaveRoomReply.SerializeToString,
            ),
            'ReadyToStart': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadyToStart,
                    request_deserializer=service__pb2.ReadyToStartRequest.FromString,
                    response_serializer=service__pb2.ReadyToStartReply.SerializeToString,
            ),
            'Kill': grpc.unary_unary_rpc_method_handler(
                    servicer.Kill,
                    request_deserializer=service__pb2.KillRequest.FromString,
                    response_serializer=service__pb2.KillReply.SerializeToString,
            ),
            'IsKiller': grpc.unary_unary_rpc_method_handler(
                    servicer.IsKiller,
                    request_deserializer=service__pb2.IsKillerRequest.FromString,
                    response_serializer=service__pb2.IsKillerReply.SerializeToString,
            ),
            'Night': grpc.unary_unary_rpc_method_handler(
                    servicer.Night,
                    request_deserializer=service__pb2.NightRequest.FromString,
                    response_serializer=service__pb2.NightReply.SerializeToString,
            ),
            'Day': grpc.unary_unary_rpc_method_handler(
                    servicer.Day,
                    request_deserializer=service__pb2.DayRequest.FromString,
                    response_serializer=service__pb2.DayReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mafia.Mafia', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mafia(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/CreateRoom',
            service__pb2.CreateRoomRequest.SerializeToString,
            service__pb2.CreateRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinToRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/JoinToRoom',
            service__pb2.JoinToRoomRequest.SerializeToString,
            service__pb2.JoinToRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeOnNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mafia.Mafia/SubscribeOnNotifications',
            service__pb2.SubscribeOnNotificationsRequest.SerializeToString,
            service__pb2.SubscribeOnNotificationsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/LeaveRoom',
            service__pb2.LeaveRoomRequest.SerializeToString,
            service__pb2.LeaveRoomReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadyToStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/ReadyToStart',
            service__pb2.ReadyToStartRequest.SerializeToString,
            service__pb2.ReadyToStartReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Kill',
            service__pb2.KillRequest.SerializeToString,
            service__pb2.KillReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsKiller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/IsKiller',
            service__pb2.IsKillerRequest.SerializeToString,
            service__pb2.IsKillerReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Night(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Night',
            service__pb2.NightRequest.SerializeToString,
            service__pb2.NightReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Day(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/Day',
            service__pb2.DayRequest.SerializeToString,
            service__pb2.DayReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
